# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = mock_test$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	$(am__EXEEXT_3) readability_test$(EXEEXT) check_inst$(EXEEXT)
subdir = mockpp/tests
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/config/ac_cxx_rtti.m4 \
	$(top_srcdir)/config/ac_cxx_except.m4 \
	$(top_srcdir)/config/ac_cxx_boosttest.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
@WORKING_X11_TRUE@am__EXEEXT_1 = mock_test_x11$(EXEEXT)
@WORKING_QT_TRUE@am__EXEEXT_2 = mock_test_qt$(EXEEXT)
@WORKING_WIN32_TRUE@am__EXEEXT_3 = mock_test_win32$(EXEEXT)
am_check_inst_OBJECTS = check_inst.$(OBJEXT)
check_inst_OBJECTS = $(am_check_inst_OBJECTS)
am__DEPENDENCIES_1 =
check_inst_DEPENDENCIES = $(top_builddir)/mockpp/libmockpp.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
check_inst_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(check_inst_LDFLAGS) $(LDFLAGS) -o $@
am__objects_1 = VisitableMockObject_test.$(OBJEXT) \
	Formatter_test.$(OBJEXT) Throwable_test.$(OBJEXT) \
	ThrowableList_test.$(OBJEXT) ExpectationCounter_test.$(OBJEXT) \
	ExpectationCounterRange_test.$(OBJEXT) \
	ExpectationMap_test.$(OBJEXT) ExpectationList_test.$(OBJEXT) \
	ConstraintList_test.$(OBJEXT) ExpectationSet_test.$(OBJEXT) \
	ExpectationConglomeration_test.$(OBJEXT) \
	ExpectationSegment_test.$(OBJEXT) \
	ExpectationValue_test.$(OBJEXT) \
	ExpectationBoundary_test.$(OBJEXT) Verifiable_test.$(OBJEXT) \
	Exception_test.$(OBJEXT) mockpp_test.$(OBJEXT) \
	ReturnObjectList_test.$(OBJEXT) \
	VisitableMockObject_template_test.$(OBJEXT) \
	Assert_test.$(OBJEXT) AssertMo_test.$(OBJEXT) \
	MockObject_test.$(OBJEXT) VisitableMockObject_1_test.$(OBJEXT) \
	VisitableMockObject_2_test.$(OBJEXT) \
	VisitableMockObject_3_test.$(OBJEXT) \
	VisitableMockObject_4_test.$(OBJEXT) \
	VisitableMockObject_5_test.$(OBJEXT) \
	VisitableMockObject_void_test.$(OBJEXT) \
	VisitableMockObject_1_void_test.$(OBJEXT) \
	VisitableMockObject_2_void_test.$(OBJEXT) \
	VisitableMockObject_3_void_test.$(OBJEXT) \
	VisitableMockObject_4_void_test.$(OBJEXT) \
	VisitableMockObject_5_void_test.$(OBJEXT) \
	VerifyingTestCase_test.$(OBJEXT) classes_ABCDE.$(OBJEXT) \
	VerifyingTestCaller_test.$(OBJEXT) \
	TrackingCounter_test.$(OBJEXT) \
	MixedMockObject_5_test.$(OBJEXT) TimeServer_test.$(OBJEXT) \
	VisitableMockMethod_2_test.$(OBJEXT) \
	VisitableMockMethod_1_test.$(OBJEXT) \
	VisitableMockMethod_test.$(OBJEXT) \
	ResponseVector_test.$(OBJEXT) NoException_test.$(OBJEXT) \
	And_test.$(OBJEXT) IsAnything_test.$(OBJEXT) \
	IsCloseTo_test.$(OBJEXT) IsEqual_test.$(OBJEXT) \
	IsGreaterOrEqual_test.$(OBJEXT) IsGreaterThan_test.$(OBJEXT) \
	IsInstanceOf_test.$(OBJEXT) IsLessOrEqual_test.$(OBJEXT) \
	IsLessThan_test.$(OBJEXT) IsNot_test.$(OBJEXT) \
	IsNothing_test.$(OBJEXT) IsSame_test.$(OBJEXT) \
	Or_test.$(OBJEXT) ReturnStub_test.$(OBJEXT) \
	RandomStub_test.$(OBJEXT) ReturnObjectListStub_test.$(OBJEXT) \
	ReturnAndTriggerStub_test.$(OBJEXT) \
	StringContains_test.$(OBJEXT) StubSequence_test.$(OBJEXT) \
	TestFailureStub_test.$(OBJEXT) ThrowStub_test.$(OBJEXT) \
	VoidStub_test.$(OBJEXT) \
	ChainingMockObjectSupport_test.$(OBJEXT) \
	CustomStub_test.$(OBJEXT) DefaultResultStub_test.$(OBJEXT) \
	Invocation_test.$(OBJEXT) AnyArgumentsMatcher_test.$(OBJEXT) \
	InvokedRecorder_test.$(OBJEXT) \
	InvokeAtLeastOnceMatcher_test.$(OBJEXT) \
	InvokeOnceMatcher_test.$(OBJEXT) \
	InvokeCountMatcher_test.$(OBJEXT) \
	InvokedAfterMatcher_test.$(OBJEXT) \
	TestFailureMatcher_test.$(OBJEXT) \
	NoArgumentsMatcher_test.$(OBJEXT) \
	ArgumentsMatcher_test.$(OBJEXT) ConstraintSet_test.$(OBJEXT) \
	ArgumentsMatchBuilder_test.$(OBJEXT) \
	InvocationMockerBuilder_test.$(OBJEXT) \
	AbstractDynamicChainingMock_test.$(OBJEXT) \
	AbstractInvocationDispatcher_test.$(OBJEXT) \
	ChainingMockBuilder_test.$(OBJEXT) CoreMock_test.$(OBJEXT) \
	DynamicChainingMockError_test.$(OBJEXT) \
	FIFOInvocationDispatcher_test.$(OBJEXT) \
	InvocationMocker_test.$(OBJEXT) \
	LIFOInvocationDispatcher_test.$(OBJEXT) \
	InvokeAtMostMatcher_test.$(OBJEXT) \
	InvokedBeforeMatcher_test.$(OBJEXT) StubBuilder_test.$(OBJEXT) \
	MatchBuilder_test.$(OBJEXT) \
	InvokeAtLeastMatcher_test.$(OBJEXT) \
	ChainableMockObject_1_test.$(OBJEXT) \
	ChainableMockObject_1_void_test.$(OBJEXT) \
	ChainableMockObject_2_test.$(OBJEXT) \
	ChainableMockObject_2_void_test.$(OBJEXT) \
	ChainableMockObject_3_test.$(OBJEXT) \
	ChainableMockObject_3_void_test.$(OBJEXT) \
	ChainableMockObject_4_test.$(OBJEXT) \
	ChainableMockObject_4_void_test.$(OBJEXT) \
	ChainableMockObject_5_test.$(OBJEXT) \
	ChainableMockObject_5_void_test.$(OBJEXT) \
	ChainableMockObject_test.$(OBJEXT) \
	ChainableMockObject_void_test.$(OBJEXT) \
	TypelessStubSequence_test.$(OBJEXT) \
	StringEndsWith_test.$(OBJEXT) StringStartsWith_test.$(OBJEXT) \
	UnlimitedMatcher_test.$(OBJEXT) mockpp_pti_test.$(OBJEXT) \
	OutBound_test.$(OBJEXT) TriggeredOutbound_test.$(OBJEXT) \
	ChainableMockObjectPolymorphism_test.$(OBJEXT) \
	ChainableMockMethod_test.$(OBJEXT) \
	ChainableMockMethod_1_test.$(OBJEXT) \
	ChainableMockMethod_2_test.$(OBJEXT)
am_mock_test_OBJECTS = mock_test.$(OBJEXT) $(am__objects_1)
mock_test_OBJECTS = $(am_mock_test_OBJECTS)
mock_test_DEPENDENCIES = $(top_builddir)/mockpp/libmockpp.la \
	$(top_builddir)/mockpp/production/libmockpp_production.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(cxxtest_lib)
mock_test_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(mock_test_LDFLAGS) $(LDFLAGS) -o $@
am__mock_test_qt_SOURCES_DIST = mock_test_qt.cpp \
	VisitableMockObject_test.cpp Formatter_test.cpp \
	Throwable_test.cpp ThrowableList_test.cpp \
	ExpectationCounter_test.cpp ExpectationCounterRange_test.cpp \
	ExpectationMap_test.cpp ExpectationList_test.cpp \
	ConstraintList_test.cpp ExpectationSet_test.cpp \
	ExpectationConglomeration_test.cpp ExpectationSegment_test.cpp \
	ExpectationValue_test.cpp ExpectationBoundary_test.cpp \
	Verifiable_test.cpp Exception_test.cpp mockpp_test.cpp \
	ReturnObjectList_test.cpp \
	VisitableMockObject_template_test.cpp Assert_test.cpp \
	AssertMo_test.cpp MockObject_test.cpp \
	VisitableMockObject_1_test.cpp VisitableMockObject_2_test.cpp \
	VisitableMockObject_3_test.cpp VisitableMockObject_4_test.cpp \
	VisitableMockObject_5_test.cpp \
	VisitableMockObject_void_test.cpp \
	VisitableMockObject_1_void_test.cpp \
	VisitableMockObject_2_void_test.cpp \
	VisitableMockObject_3_void_test.cpp \
	VisitableMockObject_4_void_test.cpp \
	VisitableMockObject_5_void_test.cpp VerifyingTestCase_test.cpp \
	classes_ABCDE.cpp VerifyingTestCaller_test.cpp \
	TrackingCounter_test.cpp MixedMockObject_5_test.cpp \
	TimeServer_test.cpp VisitableMockMethod_2_test.cpp \
	VisitableMockMethod_1_test.cpp VisitableMockMethod_test.cpp \
	ResponseVector_test.cpp NoException_test.cpp And_test.cpp \
	IsAnything_test.cpp IsCloseTo_test.cpp IsEqual_test.cpp \
	IsGreaterOrEqual_test.cpp IsGreaterThan_test.cpp \
	IsInstanceOf_test.cpp IsLessOrEqual_test.cpp \
	IsLessThan_test.cpp IsNot_test.cpp IsNothing_test.cpp \
	IsSame_test.cpp Or_test.cpp ReturnStub_test.cpp \
	RandomStub_test.cpp ReturnObjectListStub_test.cpp \
	ReturnAndTriggerStub_test.cpp StringContains_test.cpp \
	StubSequence_test.cpp TestFailureStub_test.cpp \
	ThrowStub_test.cpp VoidStub_test.cpp \
	ChainingMockObjectSupport_test.cpp CustomStub_test.cpp \
	DefaultResultStub_test.cpp Invocation_test.cpp \
	AnyArgumentsMatcher_test.cpp InvokedRecorder_test.cpp \
	InvokeAtLeastOnceMatcher_test.cpp InvokeOnceMatcher_test.cpp \
	InvokeCountMatcher_test.cpp InvokedAfterMatcher_test.cpp \
	TestFailureMatcher_test.cpp NoArgumentsMatcher_test.cpp \
	ArgumentsMatcher_test.cpp ConstraintSet_test.cpp \
	ArgumentsMatchBuilder_test.cpp \
	InvocationMockerBuilder_test.cpp \
	AbstractDynamicChainingMock_test.cpp \
	AbstractInvocationDispatcher_test.cpp \
	ChainingMockBuilder_test.cpp CoreMock_test.cpp \
	DynamicChainingMockError_test.cpp \
	FIFOInvocationDispatcher_test.cpp InvocationMocker_test.cpp \
	LIFOInvocationDispatcher_test.cpp InvokeAtMostMatcher_test.cpp \
	InvokedBeforeMatcher_test.cpp StubBuilder_test.cpp \
	MatchBuilder_test.cpp InvokeAtLeastMatcher_test.cpp \
	ChainableMockObject_1_test.cpp \
	ChainableMockObject_1_void_test.cpp \
	ChainableMockObject_2_test.cpp \
	ChainableMockObject_2_void_test.cpp \
	ChainableMockObject_3_test.cpp \
	ChainableMockObject_3_void_test.cpp \
	ChainableMockObject_4_test.cpp \
	ChainableMockObject_4_void_test.cpp \
	ChainableMockObject_5_test.cpp \
	ChainableMockObject_5_void_test.cpp \
	ChainableMockObject_test.cpp ChainableMockObject_void_test.cpp \
	TypelessStubSequence_test.cpp StringEndsWith_test.cpp \
	StringStartsWith_test.cpp UnlimitedMatcher_test.cpp \
	mockpp_pti_test.cpp OutBound_test.cpp \
	TriggeredOutbound_test.cpp \
	ChainableMockObjectPolymorphism_test.cpp \
	ChainableMockMethod_test.cpp ChainableMockMethod_1_test.cpp \
	ChainableMockMethod_2_test.cpp
@WORKING_QT_TRUE@am_mock_test_qt_OBJECTS = mock_test_qt.$(OBJEXT) \
@WORKING_QT_TRUE@	$(am__objects_1)
mock_test_qt_OBJECTS = $(am_mock_test_qt_OBJECTS)
@WORKING_QT_TRUE@mock_test_qt_DEPENDENCIES =  \
@WORKING_QT_TRUE@	$(top_builddir)/mockpp/libmockpp.la \
@WORKING_QT_TRUE@	$(cxxtest_lib) $(am__DEPENDENCIES_1) \
@WORKING_QT_TRUE@	$(am__DEPENDENCIES_1)
mock_test_qt_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(mock_test_qt_LDFLAGS) $(LDFLAGS) -o $@
am__mock_test_win32_SOURCES_DIST = mock_test_win32.cpp \
	VisitableMockObject_test.cpp Formatter_test.cpp \
	Throwable_test.cpp ThrowableList_test.cpp \
	ExpectationCounter_test.cpp ExpectationCounterRange_test.cpp \
	ExpectationMap_test.cpp ExpectationList_test.cpp \
	ConstraintList_test.cpp ExpectationSet_test.cpp \
	ExpectationConglomeration_test.cpp ExpectationSegment_test.cpp \
	ExpectationValue_test.cpp ExpectationBoundary_test.cpp \
	Verifiable_test.cpp Exception_test.cpp mockpp_test.cpp \
	ReturnObjectList_test.cpp \
	VisitableMockObject_template_test.cpp Assert_test.cpp \
	AssertMo_test.cpp MockObject_test.cpp \
	VisitableMockObject_1_test.cpp VisitableMockObject_2_test.cpp \
	VisitableMockObject_3_test.cpp VisitableMockObject_4_test.cpp \
	VisitableMockObject_5_test.cpp \
	VisitableMockObject_void_test.cpp \
	VisitableMockObject_1_void_test.cpp \
	VisitableMockObject_2_void_test.cpp \
	VisitableMockObject_3_void_test.cpp \
	VisitableMockObject_4_void_test.cpp \
	VisitableMockObject_5_void_test.cpp VerifyingTestCase_test.cpp \
	classes_ABCDE.cpp VerifyingTestCaller_test.cpp \
	TrackingCounter_test.cpp MixedMockObject_5_test.cpp \
	TimeServer_test.cpp VisitableMockMethod_2_test.cpp \
	VisitableMockMethod_1_test.cpp VisitableMockMethod_test.cpp \
	ResponseVector_test.cpp NoException_test.cpp And_test.cpp \
	IsAnything_test.cpp IsCloseTo_test.cpp IsEqual_test.cpp \
	IsGreaterOrEqual_test.cpp IsGreaterThan_test.cpp \
	IsInstanceOf_test.cpp IsLessOrEqual_test.cpp \
	IsLessThan_test.cpp IsNot_test.cpp IsNothing_test.cpp \
	IsSame_test.cpp Or_test.cpp ReturnStub_test.cpp \
	RandomStub_test.cpp ReturnObjectListStub_test.cpp \
	ReturnAndTriggerStub_test.cpp StringContains_test.cpp \
	StubSequence_test.cpp TestFailureStub_test.cpp \
	ThrowStub_test.cpp VoidStub_test.cpp \
	ChainingMockObjectSupport_test.cpp CustomStub_test.cpp \
	DefaultResultStub_test.cpp Invocation_test.cpp \
	AnyArgumentsMatcher_test.cpp InvokedRecorder_test.cpp \
	InvokeAtLeastOnceMatcher_test.cpp InvokeOnceMatcher_test.cpp \
	InvokeCountMatcher_test.cpp InvokedAfterMatcher_test.cpp \
	TestFailureMatcher_test.cpp NoArgumentsMatcher_test.cpp \
	ArgumentsMatcher_test.cpp ConstraintSet_test.cpp \
	ArgumentsMatchBuilder_test.cpp \
	InvocationMockerBuilder_test.cpp \
	AbstractDynamicChainingMock_test.cpp \
	AbstractInvocationDispatcher_test.cpp \
	ChainingMockBuilder_test.cpp CoreMock_test.cpp \
	DynamicChainingMockError_test.cpp \
	FIFOInvocationDispatcher_test.cpp InvocationMocker_test.cpp \
	LIFOInvocationDispatcher_test.cpp InvokeAtMostMatcher_test.cpp \
	InvokedBeforeMatcher_test.cpp StubBuilder_test.cpp \
	MatchBuilder_test.cpp InvokeAtLeastMatcher_test.cpp \
	ChainableMockObject_1_test.cpp \
	ChainableMockObject_1_void_test.cpp \
	ChainableMockObject_2_test.cpp \
	ChainableMockObject_2_void_test.cpp \
	ChainableMockObject_3_test.cpp \
	ChainableMockObject_3_void_test.cpp \
	ChainableMockObject_4_test.cpp \
	ChainableMockObject_4_void_test.cpp \
	ChainableMockObject_5_test.cpp \
	ChainableMockObject_5_void_test.cpp \
	ChainableMockObject_test.cpp ChainableMockObject_void_test.cpp \
	TypelessStubSequence_test.cpp StringEndsWith_test.cpp \
	StringStartsWith_test.cpp UnlimitedMatcher_test.cpp \
	mockpp_pti_test.cpp OutBound_test.cpp \
	TriggeredOutbound_test.cpp \
	ChainableMockObjectPolymorphism_test.cpp \
	ChainableMockMethod_test.cpp ChainableMockMethod_1_test.cpp \
	ChainableMockMethod_2_test.cpp
@WORKING_WIN32_TRUE@am_mock_test_win32_OBJECTS =  \
@WORKING_WIN32_TRUE@	mock_test_win32.$(OBJEXT) $(am__objects_1)
mock_test_win32_OBJECTS = $(am_mock_test_win32_OBJECTS)
@WORKING_WIN32_TRUE@mock_test_win32_DEPENDENCIES =  \
@WORKING_WIN32_TRUE@	$(top_builddir)/mockpp/libmockpp.la \
@WORKING_WIN32_TRUE@	$(cxxtest_lib) $(am__DEPENDENCIES_1) \
@WORKING_WIN32_TRUE@	$(am__DEPENDENCIES_1)
mock_test_win32_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(mock_test_win32_LDFLAGS) $(LDFLAGS) -o $@
am__mock_test_x11_SOURCES_DIST = mock_test_x11.cpp \
	VisitableMockObject_test.cpp Formatter_test.cpp \
	Throwable_test.cpp ThrowableList_test.cpp \
	ExpectationCounter_test.cpp ExpectationCounterRange_test.cpp \
	ExpectationMap_test.cpp ExpectationList_test.cpp \
	ConstraintList_test.cpp ExpectationSet_test.cpp \
	ExpectationConglomeration_test.cpp ExpectationSegment_test.cpp \
	ExpectationValue_test.cpp ExpectationBoundary_test.cpp \
	Verifiable_test.cpp Exception_test.cpp mockpp_test.cpp \
	ReturnObjectList_test.cpp \
	VisitableMockObject_template_test.cpp Assert_test.cpp \
	AssertMo_test.cpp MockObject_test.cpp \
	VisitableMockObject_1_test.cpp VisitableMockObject_2_test.cpp \
	VisitableMockObject_3_test.cpp VisitableMockObject_4_test.cpp \
	VisitableMockObject_5_test.cpp \
	VisitableMockObject_void_test.cpp \
	VisitableMockObject_1_void_test.cpp \
	VisitableMockObject_2_void_test.cpp \
	VisitableMockObject_3_void_test.cpp \
	VisitableMockObject_4_void_test.cpp \
	VisitableMockObject_5_void_test.cpp VerifyingTestCase_test.cpp \
	classes_ABCDE.cpp VerifyingTestCaller_test.cpp \
	TrackingCounter_test.cpp MixedMockObject_5_test.cpp \
	TimeServer_test.cpp VisitableMockMethod_2_test.cpp \
	VisitableMockMethod_1_test.cpp VisitableMockMethod_test.cpp \
	ResponseVector_test.cpp NoException_test.cpp And_test.cpp \
	IsAnything_test.cpp IsCloseTo_test.cpp IsEqual_test.cpp \
	IsGreaterOrEqual_test.cpp IsGreaterThan_test.cpp \
	IsInstanceOf_test.cpp IsLessOrEqual_test.cpp \
	IsLessThan_test.cpp IsNot_test.cpp IsNothing_test.cpp \
	IsSame_test.cpp Or_test.cpp ReturnStub_test.cpp \
	RandomStub_test.cpp ReturnObjectListStub_test.cpp \
	ReturnAndTriggerStub_test.cpp StringContains_test.cpp \
	StubSequence_test.cpp TestFailureStub_test.cpp \
	ThrowStub_test.cpp VoidStub_test.cpp \
	ChainingMockObjectSupport_test.cpp CustomStub_test.cpp \
	DefaultResultStub_test.cpp Invocation_test.cpp \
	AnyArgumentsMatcher_test.cpp InvokedRecorder_test.cpp \
	InvokeAtLeastOnceMatcher_test.cpp InvokeOnceMatcher_test.cpp \
	InvokeCountMatcher_test.cpp InvokedAfterMatcher_test.cpp \
	TestFailureMatcher_test.cpp NoArgumentsMatcher_test.cpp \
	ArgumentsMatcher_test.cpp ConstraintSet_test.cpp \
	ArgumentsMatchBuilder_test.cpp \
	InvocationMockerBuilder_test.cpp \
	AbstractDynamicChainingMock_test.cpp \
	AbstractInvocationDispatcher_test.cpp \
	ChainingMockBuilder_test.cpp CoreMock_test.cpp \
	DynamicChainingMockError_test.cpp \
	FIFOInvocationDispatcher_test.cpp InvocationMocker_test.cpp \
	LIFOInvocationDispatcher_test.cpp InvokeAtMostMatcher_test.cpp \
	InvokedBeforeMatcher_test.cpp StubBuilder_test.cpp \
	MatchBuilder_test.cpp InvokeAtLeastMatcher_test.cpp \
	ChainableMockObject_1_test.cpp \
	ChainableMockObject_1_void_test.cpp \
	ChainableMockObject_2_test.cpp \
	ChainableMockObject_2_void_test.cpp \
	ChainableMockObject_3_test.cpp \
	ChainableMockObject_3_void_test.cpp \
	ChainableMockObject_4_test.cpp \
	ChainableMockObject_4_void_test.cpp \
	ChainableMockObject_5_test.cpp \
	ChainableMockObject_5_void_test.cpp \
	ChainableMockObject_test.cpp ChainableMockObject_void_test.cpp \
	TypelessStubSequence_test.cpp StringEndsWith_test.cpp \
	StringStartsWith_test.cpp UnlimitedMatcher_test.cpp \
	mockpp_pti_test.cpp OutBound_test.cpp \
	TriggeredOutbound_test.cpp \
	ChainableMockObjectPolymorphism_test.cpp \
	ChainableMockMethod_test.cpp ChainableMockMethod_1_test.cpp \
	ChainableMockMethod_2_test.cpp
@WORKING_X11_TRUE@am_mock_test_x11_OBJECTS = mock_test_x11.$(OBJEXT) \
@WORKING_X11_TRUE@	$(am__objects_1)
mock_test_x11_OBJECTS = $(am_mock_test_x11_OBJECTS)
@WORKING_X11_TRUE@mock_test_x11_DEPENDENCIES =  \
@WORKING_X11_TRUE@	$(top_builddir)/mockpp/libmockpp.la \
@WORKING_X11_TRUE@	$(cxxtest_lib) $(am__DEPENDENCIES_1) \
@WORKING_X11_TRUE@	$(am__DEPENDENCIES_1)
mock_test_x11_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(mock_test_x11_LDFLAGS) $(LDFLAGS) -o $@
am_readability_test_OBJECTS = readability_test.$(OBJEXT) \
	classes_ABCDE.$(OBJEXT)
readability_test_OBJECTS = $(am_readability_test_OBJECTS)
readability_test_DEPENDENCIES = $(top_builddir)/mockpp/libmockpp.la \
	$(cxxtest_lib) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
readability_test_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(readability_test_LDFLAGS) $(LDFLAGS) -o $@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(check_inst_SOURCES) $(mock_test_SOURCES) \
	$(mock_test_qt_SOURCES) $(mock_test_win32_SOURCES) \
	$(mock_test_x11_SOURCES) $(readability_test_SOURCES)
DIST_SOURCES = $(check_inst_SOURCES) $(mock_test_SOURCES) \
	$(am__mock_test_qt_SOURCES_DIST) \
	$(am__mock_test_win32_SOURCES_DIST) \
	$(am__mock_test_x11_SOURCES_DIST) $(readability_test_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BZIP2 = @BZIP2@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPPUNIT_CFLAGS = @CPPUNIT_CFLAGS@
CPPUNIT_CONFIG = @CPPUNIT_CONFIG@
CPPUNIT_LIBS = @CPPUNIT_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOT = @DOT@
DOT_PATH = @DOT_PATH@
DOXYGEN = @DOXYGEN@
EA_EXTRA_INC = @EA_EXTRA_INC@
EA_EXTRA_LIB = @EA_EXTRA_LIB@
EA_PDF_CATALOG = @EA_PDF_CATALOG@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FOP = @FOP@
GREP = @GREP@
HAVE_DOT = @HAVE_DOT@
HAVE_STD_WCSCMP = @HAVE_STD_WCSCMP@
HAVE_WSTRING = @HAVE_WSTRING@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBBOOST = @LIBBOOST@
LIBDL = @LIBDL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_RELEASE = @LT_RELEASE@
LT_REVISION = @LT_REVISION@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MOCKPP_BINARY_AGE = @MOCKPP_BINARY_AGE@
MOCKPP_INTERFACE_AGE = @MOCKPP_INTERFACE_AGE@
MOCKPP_MAJOR_VERSION = @MOCKPP_MAJOR_VERSION@
MOCKPP_MICRO_VERSION = @MOCKPP_MICRO_VERSION@
MOCKPP_MINOR_VERSION = @MOCKPP_MINOR_VERSION@
MOCKPP_NO_STD_NS = @MOCKPP_NO_STD_NS@
MOCKPP_NO_STD_NUMERICLIMITS = @MOCKPP_NO_STD_NUMERICLIMITS@
MOCKPP_VERSION = @MOCKPP_VERSION@
MOCKPP_VERSION_NUMBER = @MOCKPP_VERSION_NUMBER@
MSGFMT = @MSGFMT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PNGCRUSH = @PNGCRUSH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XSLTPROC = @XSLTPROC@
ZIPPER = @ZIPPER@
ZIPPER_EXT = @ZIPPER_EXT@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
INCLUDES = $(all_includes) -I$(top_srcdir) -I$(top_builddir) $(EA_EXTRA_INC)
DEFAULT_INCLUDES = $(INCLUDES)
CLEANFILES = *.~* *.~~* *~  gmon.out *profil.txt *.bbg *.gcno *.gcda

###########################################################################
@WORKING_WIN32_TRUE@win32_app = mock_test_win32
@WORKING_QT_TRUE@qt_app = mock_test_qt
@WORKING_X11_TRUE@x11_app = mock_test_x11
SINGLE_TESTS = $(check_PROGRAMS)
TESTS = $(SINGLE_TESTS)

###########################################################################
AM_LDFLAGS = $(all_libraries)
AM_CXXFLAGS = -I$(QTDIR)/include -I/usr/X11R6/include

###########################################################################
@BUILTIN_CXXTEST_TRUE@cxxtest_lib = $(top_builddir)/3party/cxxtest/cxxtest/libmockpp_cxxtest.la
@WORKING_QT_TRUE@mock_test_qt_LDADD = $(top_builddir)/mockpp/libmockpp.la \
@WORKING_QT_TRUE@	$(cxxtest_lib) $(LIBDL) -lstdc++ $(EA_EXTRA_LIB)  -lqt-mt

@WORKING_X11_TRUE@mock_test_x11_LDADD = $(top_builddir)/mockpp/libmockpp.la \
@WORKING_X11_TRUE@	$(cxxtest_lib) $(LIBDL) -lstdc++ $(EA_EXTRA_LIB)  -lX11

@WORKING_WIN32_TRUE@mock_test_win32_LDADD = $(top_builddir)/mockpp/libmockpp.la \
@WORKING_WIN32_TRUE@	$(cxxtest_lib) $(LIBDL) -lstdc++ $(EA_EXTRA_LIB)  -lwindows

mock_test_LDADD = $(top_builddir)/mockpp/libmockpp.la \
	$(top_builddir)/mockpp/production/libmockpp_production.la \
	$(EA_EXTRA_LIB) $(LIBBOOST) $(LIBDL) $(cxxtest_lib) -lstdc++

readability_test_LDADD = $(top_builddir)/mockpp/libmockpp.la \
	$(cxxtest_lib) $(LIBDL) -lstdc++ $(EA_EXTRA_LIB)

check_inst_LDADD = $(top_builddir)/mockpp/libmockpp.la \
	$(LIBDL) -lstdc++ $(EA_EXTRA_LIB)


###########################################################################
libmocktesting_la_SOURCES = \
	VisitableMockObject_test.cpp \
	Formatter_test.cpp Throwable_test.cpp ThrowableList_test.cpp ExpectationCounter_test.cpp \
	ExpectationCounterRange_test.cpp ExpectationMap_test.cpp ExpectationList_test.cpp \
	ConstraintList_test.cpp 		ExpectationSet_test.cpp ExpectationConglomeration_test.cpp \
	ExpectationSegment_test.cpp 		ExpectationValue_test.cpp ExpectationBoundary_test.cpp \
	Verifiable_test.cpp Exception_test.cpp 		mockpp_test.cpp ReturnObjectList_test.cpp \
	VisitableMockObject_template_test.cpp 		Assert_test.cpp AssertMo_test.cpp MockObject_test.cpp \
	VisitableMockObject_1_test.cpp 		VisitableMockObject_2_test.cpp VisitableMockObject_3_test.cpp \
	VisitableMockObject_4_test.cpp 		VisitableMockObject_5_test.cpp VisitableMockObject_void_test.cpp \
	VisitableMockObject_1_void_test.cpp 		VisitableMockObject_2_void_test.cpp \
	VisitableMockObject_3_void_test.cpp VisitableMockObject_4_void_test.cpp \
	VisitableMockObject_5_void_test.cpp VerifyingTestCase_test.cpp classes_ABCDE.cpp \
	VerifyingTestCaller_test.cpp TrackingCounter_test.cpp MixedMockObject_5_test.cpp TimeServer_test.cpp \
	VisitableMockMethod_2_test.cpp VisitableMockMethod_1_test.cpp VisitableMockMethod_test.cpp \
	ResponseVector_test.cpp NoException_test.cpp \
	And_test.cpp IsAnything_test.cpp IsCloseTo_test.cpp \
	IsEqual_test.cpp IsGreaterOrEqual_test.cpp IsGreaterThan_test.cpp IsInstanceOf_test.cpp \
	IsLessOrEqual_test.cpp IsLessThan_test.cpp IsNot_test.cpp IsNothing_test.cpp IsSame_test.cpp \
	Or_test.cpp ReturnStub_test.cpp RandomStub_test.cpp ReturnObjectListStub_test.cpp ReturnAndTriggerStub_test.cpp StringContains_test.cpp StubSequence_test.cpp \
	TestFailureStub_test.cpp ThrowStub_test.cpp VoidStub_test.cpp ChainingMockObjectSupport_test.cpp \
	CustomStub_test.cpp DefaultResultStub_test.cpp Invocation_test.cpp \
	AnyArgumentsMatcher_test.cpp InvokedRecorder_test.cpp InvokeAtLeastOnceMatcher_test.cpp \
	InvokeOnceMatcher_test.cpp InvokeCountMatcher_test.cpp InvokedAfterMatcher_test.cpp \
	TestFailureMatcher_test.cpp NoArgumentsMatcher_test.cpp ArgumentsMatcher_test.cpp \
	ConstraintSet_test.cpp ArgumentsMatchBuilder_test.cpp InvocationMockerBuilder_test.cpp \
	AbstractDynamicChainingMock_test.cpp AbstractInvocationDispatcher_test.cpp ChainingMockBuilder_test.cpp \
	CoreMock_test.cpp DynamicChainingMockError_test.cpp FIFOInvocationDispatcher_test.cpp \
	InvocationMocker_test.cpp LIFOInvocationDispatcher_test.cpp InvokeAtMostMatcher_test.cpp \
	InvokedBeforeMatcher_test.cpp StubBuilder_test.cpp MatchBuilder_test.cpp \
	InvokeAtLeastMatcher_test.cpp ChainableMockObject_1_test.cpp \
	ChainableMockObject_1_void_test.cpp ChainableMockObject_2_test.cpp ChainableMockObject_2_void_test.cpp \
	ChainableMockObject_3_test.cpp ChainableMockObject_3_void_test.cpp ChainableMockObject_4_test.cpp \
	ChainableMockObject_4_void_test.cpp ChainableMockObject_5_test.cpp ChainableMockObject_5_void_test.cpp \
	ChainableMockObject_test.cpp ChainableMockObject_void_test.cpp TypelessStubSequence_test.cpp \
	StringEndsWith_test.cpp StringStartsWith_test.cpp UnlimitedMatcher_test.cpp mockpp_pti_test.cpp \
	OutBound_test.cpp TriggeredOutbound_test.cpp ChainableMockObjectPolymorphism_test.cpp \
	ChainableMockMethod_test.cpp ChainableMockMethod_1_test.cpp ChainableMockMethod_2_test.cpp

@WORKING_QT_TRUE@mock_test_qt_SOURCES = mock_test_qt.cpp $(libmocktesting_la_SOURCES)
@WORKING_X11_TRUE@mock_test_x11_SOURCES = mock_test_x11.cpp $(libmocktesting_la_SOURCES)
@WORKING_WIN32_TRUE@mock_test_win32_SOURCES = mock_test_win32.cpp $(libmocktesting_la_SOURCES)
mock_test_SOURCES = mock_test.cpp $(libmocktesting_la_SOURCES)
readability_test_SOURCES = readability_test.cpp classes_ABCDE.cpp
check_inst_SOURCES = check_inst.cpp
noinst_HEADERS = SelectFramework.h classes_ABCDE.h MyBuilderNamespace.h MyMatchBuilder.h IncCounter.h

###########################################################################
mock_test_LDFLAGS = -L/opt/intel_cc_80/lib
@WORKING_QT_TRUE@mock_test_qt_LDFLAGS = -L/opt/intel_cc_80/lib -L$(QTDIR)/lib
@WORKING_X11_TRUE@mock_test_x11_LDFLAGS = -L/opt/intel_cc_80/lib -L/usr/X11R6/lib
@WORKING_WIN32_TRUE@mock_test_win32_LDFLAGS = -L/opt/intel_cc_80/lib -L/windows
readability_test_LDFLAGS = -L/opt/intel_cc_80/lib
check_inst_LDFLAGS = -L/opt/intel_cc_80/lib

###########################################################################
VALGRIND_OPTS = --show-reachable=yes --leak-check=yes -v
VG_SUPPRESS = vg-suppress-`hostname`.txt
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  mockpp/tests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  mockpp/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
check_inst$(EXEEXT): $(check_inst_OBJECTS) $(check_inst_DEPENDENCIES) 
	@rm -f check_inst$(EXEEXT)
	$(check_inst_LINK) $(check_inst_OBJECTS) $(check_inst_LDADD) $(LIBS)
mock_test$(EXEEXT): $(mock_test_OBJECTS) $(mock_test_DEPENDENCIES) 
	@rm -f mock_test$(EXEEXT)
	$(mock_test_LINK) $(mock_test_OBJECTS) $(mock_test_LDADD) $(LIBS)
mock_test_qt$(EXEEXT): $(mock_test_qt_OBJECTS) $(mock_test_qt_DEPENDENCIES) 
	@rm -f mock_test_qt$(EXEEXT)
	$(mock_test_qt_LINK) $(mock_test_qt_OBJECTS) $(mock_test_qt_LDADD) $(LIBS)
mock_test_win32$(EXEEXT): $(mock_test_win32_OBJECTS) $(mock_test_win32_DEPENDENCIES) 
	@rm -f mock_test_win32$(EXEEXT)
	$(mock_test_win32_LINK) $(mock_test_win32_OBJECTS) $(mock_test_win32_LDADD) $(LIBS)
mock_test_x11$(EXEEXT): $(mock_test_x11_OBJECTS) $(mock_test_x11_DEPENDENCIES) 
	@rm -f mock_test_x11$(EXEEXT)
	$(mock_test_x11_LINK) $(mock_test_x11_OBJECTS) $(mock_test_x11_LDADD) $(LIBS)
readability_test$(EXEEXT): $(readability_test_OBJECTS) $(readability_test_DEPENDENCIES) 
	@rm -f readability_test$(EXEEXT)
	$(readability_test_LINK) $(readability_test_OBJECTS) $(readability_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbstractDynamicChainingMock_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AbstractInvocationDispatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/And_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AnyArgumentsMatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ArgumentsMatchBuilder_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ArgumentsMatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AssertMo_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Assert_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockMethod_1_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockMethod_2_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockMethod_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObjectPolymorphism_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObject_1_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObject_1_void_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObject_2_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObject_2_void_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObject_3_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObject_3_void_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObject_4_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObject_4_void_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObject_5_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObject_5_void_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObject_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainableMockObject_void_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainingMockBuilder_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChainingMockObjectSupport_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConstraintList_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConstraintSet_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoreMock_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CustomStub_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DefaultResultStub_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DynamicChainingMockError_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Exception_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExpectationBoundary_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExpectationConglomeration_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExpectationCounterRange_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExpectationCounter_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExpectationList_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExpectationMap_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExpectationSegment_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExpectationSet_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExpectationValue_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FIFOInvocationDispatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Formatter_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InvocationMockerBuilder_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InvocationMocker_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Invocation_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InvokeAtLeastMatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InvokeAtLeastOnceMatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InvokeAtMostMatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InvokeCountMatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InvokeOnceMatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InvokedAfterMatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InvokedBeforeMatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InvokedRecorder_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IsAnything_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IsCloseTo_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IsEqual_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IsGreaterOrEqual_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IsGreaterThan_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IsInstanceOf_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IsLessOrEqual_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IsLessThan_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IsNot_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IsNothing_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IsSame_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LIFOInvocationDispatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MatchBuilder_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MixedMockObject_5_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MockObject_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NoArgumentsMatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NoException_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Or_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OutBound_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RandomStub_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ResponseVector_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReturnAndTriggerStub_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReturnObjectListStub_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReturnObjectList_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReturnStub_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StringContains_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StringEndsWith_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StringStartsWith_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StubBuilder_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StubSequence_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestFailureMatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestFailureStub_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ThrowStub_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ThrowableList_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Throwable_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TimeServer_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TrackingCounter_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TriggeredOutbound_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TypelessStubSequence_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UnlimitedMatcher_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Verifiable_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VerifyingTestCaller_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VerifyingTestCase_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockMethod_1_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockMethod_2_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockMethod_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_1_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_1_void_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_2_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_2_void_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_3_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_3_void_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_4_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_4_void_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_5_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_5_void_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_template_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VisitableMockObject_void_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VoidStub_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_inst.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/classes_ABCDE.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mock_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mock_test_qt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mock_test_win32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mock_test_x11.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mockpp_pti_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mockpp_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/readability_test.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; ws='[	 ]'; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


.PHONY: check_inst.cpp

profil: check
	gprof .libs/mock_test >>mockpp-profil.txt

coverage: check
	gcov IsNot.h

###########################################################################

raw-gen:
	cpp -DHAVE_CPPUNIT -DHAVE_CONFIG_H $(srcdir)/InvocationMocker_test.cpp $(INCLUDES) >x.cpp
	sed -e s,^#,//,g x.cpp >xx.cpp

raw-comp: raw-gen
	indent xx.cpp
	g++ xx.cpp -o xx

###########################################################################

mock_test_count:
	list=mock_test.files; \
	test -f $$list && rm $$list; \
	for f in $(mock_test_SOURCES); do \
	  echo $$f >> $$list.tmp; \
	done; \
	cat $$list.tmp | wc -l ; echo "Dateien in mock_test"; \
	cat $$list.tmp | sort >$$list

# --suppressions=$(srcdir)/$(VG_SUPPRESS)
 vg-mock:
	-rm *vglog*
	LD_LIBRARY_PATH=../.libs  valgrind --tool=memcheck $(VALGRIND_OPTS) --logfile=mock.vglog ./.libs/lt-mock_test; \
	grep "mock[^/]" *vglog* || cat *vglog*

#create suppression file for valgrind
vg-setup:
	for fut in $(SINGLE_TESTS); do \
	  LD_LIBRARY_PATH=../.libs  valgrind  --tool=memcheck --gen-suppressions=yes $(VALGRIND_OPTS) .libs/$$fut; \
	done;
	echo "Store all the suppression block to $(srcdir)/$(VG_SUPPRESS)"

###########################################################################

check_inst.cpp:
	-rm $(top_srcdir)/mockpp/chainable-template.h
	-rm $(top_srcdir)/mockpp/visitable-template.h
	echo ""                                                      >check_inst.cpp
	echo "// Don't edit, this file is automatically generated"  >>check_inst.cpp
	echo "// to check #include-ing of *all* headers"            >>check_inst.cpp
	echo "// /*"                                                   >>check_inst.cpp
	(N=`pwd`/check_inst.cpp; cd $(srcdir)/../..; find . -name "*.h" \
	        | grep -v "mockpp_config" | grep -v "/config/" | grep -v "/cxxtest/" | grep -v "/tests/" | grep -v "/ministl/" | grep -v "/docs/" | grep -v "/examples/" | grep -v "/generator/"\
	        | sed -e "s,\./,#include <,g" -e "s/\.h/\.h>/g" >>$$N)
	echo "// */"             >>check_inst.cpp
	echo "int main()"     >>check_inst.cpp
	echo "{"              >>check_inst.cpp
	echo " return 0;"     >>check_inst.cpp
	echo "}"              >>check_inst.cpp
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
