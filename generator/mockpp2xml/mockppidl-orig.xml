<!DOCTYPE MOCKPP-IDL>
<MOCKPP-IDL version='1.16.4'>
<SOURCE>/home/ea/Dokumente/src/mockpp/trunk/mockpp/generator/mockpp2xml/mockppidl_test.h</SOURCE>
<INCLUDE>&lt;string&gt;</INCLUDE>
<CLASS>
    <NAME>IdlInterface</NAME>
</CLASS>
<CLASS>
    <NAME>MockppIdlTest</NAME>
    <SUPER>IdlInterface</SUPER>
    <CONSTRUCTOR>
        <NAME>MockppIdlTest</NAME>
    </CONSTRUCTOR>
    <CONSTRUCTOR>
        <ARG><TYPE>int</TYPE><NAME>i</NAME></ARG>
        <ARG><TYPE  qleft="const" qright="&amp;">std::string</TYPE><NAME>s</NAME></ARG>
        <NAME>MockppIdlTest</NAME>
    </CONSTRUCTOR>
    <METHOD virtual='1' pure='1'>
        <TYPE qright="*">std::string</TYPE>
        <NAME>first_url4</NAME>
    </METHOD>
    <METHOD virtual='1' pure='1'>
        <TYPE qright="*">std::string</TYPE>
        <NAME>first_url4</NAME>
        <ARG><TYPE>int</TYPE><NAME>i</NAME></ARG>
    </METHOD>
    <METHOD virtual='1' pure='1'>
        <TYPE qright="*">std::string</TYPE>
        <NAME>first_url4</NAME>
        <ARG><TYPE>long int</TYPE><NAME>li</NAME></ARG>
    </METHOD>
    <METHOD virtual='1' pure='1'>
        <TYPE  qleft="const" qright="*">void</TYPE>
        <NAME>first_url4</NAME>
        <ARG><TYPE>float</TYPE><NAME>li</NAME></ARG>
    </METHOD>
    <METHOD virtual='1' pure='1'>
        <TYPE qright="* const">void</TYPE>
        <NAME>first_url4</NAME>
        <ARG><TYPE>double</TYPE><NAME>li</NAME></ARG>
    </METHOD>
    <METHOD qual="const" virtual='1' pure='1'>
        <TYPE>std::string</TYPE>
        <NAME>constTest</NAME>
    </METHOD>
    <METHOD qual="const" virtual='1' pure='1'>
        <TYPE qright="&amp;">std::string</TYPE>
        <NAME>constRefTest</NAME>
    </METHOD>
    <METHOD qual="const" virtual='1' pure='1'>
        <TYPE qright="**">long int</TYPE>
        <NAME>firstViewConst</NAME>
    </METHOD>
    <METHOD virtual='1' pure='1'>
        <TYPE qright="*">void</TYPE>
        <NAME>firstView</NAME>
    </METHOD>
    <METHOD qual="const" virtual='1' pure='1'>
        <TYPE qright="*">void</TYPE>
        <NAME>nextView1</NAME>
        <ARG><TYPE>int</TYPE><NAME>i</NAME></ARG>
        <ARG><TYPE>long int</TYPE><NAME>l</NAME></ARG>
        <ARG><TYPE qright="&amp;">std::string</TYPE><NAME>s</NAME></ARG>
        <ARG><TYPE  qleft="const" qright="*">bool</TYPE><NAME>b</NAME></ARG>
        <ARG><TYPE>char</TYPE><NAME>c</NAME></ARG>
    </METHOD>
    <METHOD qual="const" virtual='1' pure='1'>
        <TYPE qright="*">void</TYPE>
        <NAME>nextView2</NAME>
        <ARG><TYPE>int</TYPE><NAME>i</NAME></ARG>
        <ARG><TYPE>long int</TYPE><NAME>l</NAME></ARG>
        <ARG><TYPE qright="&amp;">std::string</TYPE><NAME>s</NAME></ARG>
        <ARG><TYPE qright="* const">bool</TYPE><NAME>b</NAME></ARG>
        <ARG><TYPE>char</TYPE><NAME>c</NAME></ARG>
    </METHOD>
    <METHOD>
        <TYPE>void</TYPE>
        <NAME>getNumObjects</NAME>
        <ARG><TYPE>std::string</TYPE><NAME>s</NAME></ARG>
    </METHOD>
    <METHOD>
        <TYPE  qleft="const" qright="*">void</TYPE>
        <NAME>getObject</NAME>
        <ARG><TYPE  qleft="const" qright="&amp;">std::string</TYPE><NAME>s</NAME></ARG>
    </METHOD>
    <METHOD throw='/* todo */'>
        <TYPE>int</TYPE>
        <NAME>getNumPages</NAME>
        <ARG><TYPE  qleft="const" qright="&amp;">std::wstring</TYPE><NAME>s</NAME></ARG>
    </METHOD>
    <METHOD virtual='1' pure='1'>
        <TYPE  qleft="const" qright="*">std::string</TYPE>
        <NAME>last_url4</NAME>
    </METHOD>
    <METHOD virtual='1' pure='1'>
        <TYPE qright="*****">std::string</TYPE>
        <NAME>last_url4</NAME>
        <ARG><TYPE>int</TYPE><NAME>i</NAME></ARG>
    </METHOD>
    <METHOD virtual='1' pure='1' throw='/* todo */'>
        <TYPE qright="*">std::string</TYPE>
        <NAME>last_url4</NAME>
        <ARG><TYPE>long int</TYPE><NAME>li</NAME></ARG>
    </METHOD>
</CLASS>
</MOCKPP-IDL>
